[{"id":"95921b3be6ca14e92a93160a0aaa4c9f","title":"ChatGPT使用体验：吹响第四次工业革命的号角","content":"前言2022年，ChatGPT在美国掀起一股狂潮，高校学生甚至老师都在使用它回答问题、查阅资料以及辅导上课，更有Al绘画夺得奖项这样令人哭笑不得的故事。如今，ChatGPT4.0终于上线，据说相比3.5大幅度提高了中文的理解能力，本人也是通过各种“奇巧淫记”支付20美元，成功订阅了ChatGPT Plus，看看4.0相比3.5提升幅度到底有多大，网上吹的“堪比第四次工业革命”是否名副其实。\n\n\n使用体验优点目前ChatGPT3.5免费使用，没有询问次数限制，博主尝试了一下，发现ChatGPT在资料、文章的搜索准确性上吊打传统搜索引擎（谷歌、微软、百度），去除了大量毫无意义的水文，速度极快，效率极高。\n现阶段ChatGPT3.5查阅学习资料毫无压力，甚至可以用它当面试官给自己面试，安装插件后还可以使用语音学习英语四六级。\n同样，让它生成一份500字关于某电影的影评，其质量和百家号流水线文章不相上下，生成速度快，逻辑通顺。\n\n    \n        \n    \n    \n        \n    \n\n\n缺点ChatGPT3.5东拼西凑的问题非常严重，甚至无法回答的问题，都选择胡诌。例如：Nvidia A100和H100 AI显卡区别在哪，它依旧回答出来了，但这是个伪命题，因为它的知识库截止到2021年9月，而H100的发布时间是2022年9月，所以它的回答显然是错误的，是东拼西凑出来的，但是不了解这个领域的人又很难辨别它说的是否正确，如果无脑复制粘贴很容易出现问题。\n\n    \n        \n        \n            你是怎么回答出来的\n         \n    \n    \n        \n        \n            承认错误倒是很及时，但是你错的离谱啊\n         \n    \n\n\n\nChatGPT 3.5 VS ChatGPT 4.0\n\n\n\n\n\n博主建议\n虽然在发布会上，OpenAI团队演示了有关ChatGPT4.0图像以及语音识别功能，并且取得了令人惊讶的成果，但实际上ChatGPT4.0并没有实装该功能，依旧处于内测状态，而且因为算力不足以及付费用户过多，导致ChatGPT4.0相比3.5文本输出速度变慢，3小时内只能提问25个问题（之前是4小时内100个问题），非常鸡肋。\n目前为止（2023年3月22日），不推荐购买PLUS版本，如果你对ChatGPT未来十分看好，并且愿意把它作为一种工具持续性的使用，以及更早的体验到新的版本，那我强烈建议你成为付费用户，毕竟随着付费用户越来越多，博主也无法保证能否继续注册付费，尽早加入赛道，尽早使用生产力工具，This is the way（才是正道）。\n使用方式上与3.5没有任何区别，Plus用户自己切换选择框即可，至于订阅方式不在本文赘述，比较麻烦，喜欢折腾的可以深入研究一下。\n\n\n下面是问答环节：\n\n\n\n\n\n\n\n\n\nNvidia A100和H100的区别\n对比非常明显，由于ChatGPT知识库截止到2021年9月，而H100的发布时间是2022年9月，所以无法回答才是正确答案。\n\n    \n        \n    \n    \n        \n    \n\n\n\n\n\n\n\n\n\n\n\n生成一篇有关《海上钢琴师》的文章，字数限制在250-300字\n4.0又赢了，3.5生成的文章出现严重错误，电影的主人公根本不是钢琴家，他是一位号手，在典当自己的小号时，发现了1900的钢琴，借号手的回忆展现了1900的一生，而1900未曾下过陆地，一直在邮轮上漂泊，没有结婚，没有成家，更没有老去。\n\n    \n        \n    \n    \n        \n    \n\n\n\n所以在发布会上，OpenAI团队宣称4.0相比3.5在中文的生成理解能力上大幅度提升是毫无疑问的，准确性更高，理解能力更强，语言更加优美逻辑更加通顺。\n\n百年未有之大变局，吹响第四次工业革命的号角\n\n\n\n\n\n\n\n\n1782年，瓦特提高了蒸汽机的运行效率，使之取代水车驱动的动力蒸汽机，让大规模工业化生产取代了人力劳动小批量生产的劳动模式，引发了第一次工业革命，大大解放了生产力。\n19世纪中期，欧美国家和美国、日本的资产阶级革命完成，促进了经济的发展，19世纪末期，电被发明，并且得到广泛的应用，标志着第二次工业革命的到来，随后进入千家万户，大大提高了人们的生活质量以及工厂的生产效率。\n1946年，在美国的宾夕法尼亚大学世界上第一台通用计算机诞生，没人意识到第三次工业革命的号角已经吹响，它过于庞大，难以维护，只能进行简单的计算。但是随着计算机的迭代以及不断更新，算力越来越高，体积越来越小，价格越来越便宜，第三次工业革命就这么悄无声息的到来了。\n\n\n\n\n\n\n\n\n\n“通用计算机刚发明的时候只能进行简单的十进制计算，它的体积占据了整个房间，完全没有现代计算机的雏形，但随着科技的发展，芯片制程的迭代，当初那台占据整个屋子的计算机已经变成了可以随身携带的便携式笔记本。”\n\n       \n       \n           第一台通用电子计算机 ENAIC\n       \n\n每一次工业革命都是以解放生产力为基本目标，使人们摆脱低效的重复劳动，大大促进了经济的发展，ChatGPT同理，虽然它目前面临算力要求过高，耗电量过大，难以将它植入到每个人的电脑以及手机中，但是随着科技的进步，芯片材料的突破，算力的不断提高，ChatGPT（也许是它也许是其他AI，反正终归是个AI）终将像蒸汽机、电力、通用计算机一样，进入医药、金融、科研、军工等领域。它将成为你的导师、翻译官、得力助手，它将成为不可或缺的生产力工具，就像每天早上叫醒你的闹钟一样。\nAI面临的挑战与困境看完上面的一番豪言壮志，是不是觉得第四次工业革命确实已经到了来？AI未来可期？那么我就要给你们泼一盆冷水降降温，ChatGPT包括他的祖宗GPT-3都面临着两个巨大的问题：算力不足与数据安全。\n算力不足目前全球最先进的光刻机技术为EUV，台积电正是借助EUV光刻机攻克了7nm芯片的制造难题，但是很显然摩尔定律已经到头了，纵使台积电每年变着花样的宣称自己突破4nm、2nm制程，实际在造芯片的原材料（硅片）上已经很久没有突破性的进展，和世界的基础物理学停滞不前一样，原材料不突破，纳米级就是芯片能做到的最小制程，实际就是EUV光刻机的上限。制程无法突破，芯片就无法集成更多的电路，能耗就无法降低，性能就无法飞跃式的提升。\n在2023年3月的GTC大会上，最新发布的DGX H100 AI超级计算机，专为训练GPT模型而生。H100采用双芯片架构，基于台积电 5nm 定制版本制程（4N）打造，算力惊人的同时能耗极高，真核弹级产品，这么高的功耗自然造成了资源的浪费，单单维护这些设备，一个月就要花将近100w美元，是不是有第一台通用计算机的感觉了，甚至连体积都非常相似，单个H100的算力不足以支撑AI训练，但是通过NVLINK SWITCH技术，将多个H100进行桥接，组成一个巨型GPU，多个巨型GPU组成DGX超级计算机，多个DGX又可以组成AI超级工厂（简而言之就是一个H100不够，就弄10000个）\n\n    \n        \n        \n            由台积电 5nm 定制版本制程（4N）打造的 Hopper H100\n         \n    \n    \n        \n        \n            通过NVLINK实现多个H100桥接，组成一个DGX超级计算机，多个DGX组成AI工厂\n         \n    \n\n\n\n但是，正如我之前所说，只有ChatGPT这样的AI能够进入移动领域，成为每个人都可以使用的独立AI，才算是真正的第四次工业革命，不然现阶段只能是某些巨型公司的奢侈品，其他公司无力支付如此高昂的运维费用，无法生产出独立的AI芯片，生产力无法解放，何谈工业革命，所以算力不足是限制AI的一个巨大问题。\n哦对了，你知道我为什么不把现阶段ChatGPT会输出错误信息算做问题之一吗？因为随着GPT模型的迭代演化，训练数据量指数级增加，终究这些微不足道的问题会被修正，GPT模型现在属于高速上升期，这种因为训练量不足造成的微小缺陷根本比不上算力不足，所以博主懒得解释。\n数据安全这个解释起来就简单多了，AI训练的模型都是基于OpenAI开发者导入的数据，那么这些导入的数据从何而来，很显然是互联网，不然怎么会有那么多开源作者出来吐槽ChatGPT呢，而且AI生成的文章、图片都具有迷惑性（比如特朗普被抓），很难判断它的真假，除非你真的是该领域的工作者，不然真的会被ChatGPT一本正经的胡诌给唬住。所以说，如果各个国家无法独立研发AI，最终都使用来自AI巨头的产品，那么数据安全会成为一个大问题，你所知道的历史、哲学都是AI生成的，你如何判断真与假，到时候没准连搜索引擎都不存在，只能去图书馆扒史书，所以现阶段中国不给ChatGPT提供数据是有道理的，数据的监管任重而道远。\n\n    \n    \n        不用怀疑，这就是通过GPT结合绘图AI生成的人物摄影\n     \n\n\n\nAI’s “iPhone Moment”\n\n\n\n\n\n\n\n\n”人们总是高估一项新技术产生的短期影响，而低估这项技术对未来的长期影响“\n\n    \n        \n        \n            2016年，NVIDIA CEO黄仁勋亲自将一台DGX-1超级计算机赠与OpenAI\n         \n    \n    \n        \n         \n           NVIDIA CEO黄仁勋与OpenAI成员一一握手\n         \n    \n\n\n2016年8月17日，NVIDIA CEO黄仁勋（Jen-Hsun Huang）亲自将一台DGX-1超级计算机赠与OpenAI。\n2018年6月，GPT-1发布，是OpenAI公司推出的第一个GPT模型。\n2019年8月，GPT-2发布，是GPT系列的第二个版本，它比GPT-1更加庞大，具有15亿到17亿个参数的不同规模模型。\n2020年5月，NVIDIA推出了新一代的DGX A100系统，并为OpenAI提供了DGX SuperPOD。这台超级计算机为OpenAI的研究和开发提供了关键支持，尤其是GPT-3等大型AI模型。\n2020年6月，GPT-3发布，GPT-3是一个具有1750亿个属性的自回归语言模型，该模型扩展了OpenAI之前创建的基于15亿参数的GPT-2语言模型。\n2022年11月30日，基于人工智能的聊天机器人ChatGPT发布。\n正如古人所言：”不积跬步，无以至千里，不积小流，无以成江海。“ 每次技术的大爆炸都是从某个不起眼的节点开始，这天你或许在996，或许在摆摊，或许在家中躺平，你甚至都不知道OpenAI是干什么的，老黄不好好造游戏显卡天天宣传什么AI。。。但等到若干年后，你打开电脑询问AI助手：“AI的iphone时刻是什么？” 它的回答会让你觉得那一天是多么的重要，却又微不足道。\n\n    \n    \n       OpenAI 团队成员合影\n     \n\n\n最后，就以2023年NVIDIA GTC大会中i am ai宣传片的自我介绍作为文章的结尾。第四次工业革命是否悄然来袭，AI是否会代替我们完成工作，而我们又将何去何从，这一切的遐想就留给读者们去头脑风暴吧，感谢阅读。\n\n\n\n\n\n\n\n\n\n\n   I am a translator, transforming text into creative discovery，movement into animation and direction into action\n\n   我是一名翻译，将文字转化为创意探索，将指令转化为行动，\n   i am a healer, exploring the building blocks that make us unique modeling new threats before they happen and searching for the cures to keep them at bay\n   我是一名治疗师，探索构成我们独特性的基石，在它们发生之前对新威胁进行建模，并寻找治疗方法以防止它们侵袭\n   i am visionary, generating new medical miracles and giving us a new perspective on our sun to keep us safe here on earth\n   我是一名远见者，创造新的医学奇迹，让我们对太阳有新的认识，以确保地球上的安全\n   i am a navigator, discovering a unique moment in sea of content and the perfect setting for any story\n   我是一名导航员，在内容的海洋中发现独特的时刻，为任何故事找到完美的背景\n   i am a creator, building 3D experiences from snapshots and adding new levels reality to our virtual selves\n   我是一名创造者，从快照中构建3D体验，并为我们的虚拟自我增添新的现实层次\n   i am a helper, bringing brainstorms to life sharing the winsdom of a million programmers and turning ideas into virtual worlds\n   我是一名助手，将头脑风暴变为现实，分享一百万程序员的智慧，将想法转化为虚拟世界\n   i even helped write this script breathed life into the words and composed the melody\n   我甚至帮助撰写了这个剧本，赋予了文字生命，创作了旋律\n   i am ai，Brought to life by Nvidia,deep learning and brilliant minds everywhere\n   我是人工智能，由Nvidia、深度学习和来自世界各地的杰出人才共同赋予生命。\n   由 ChatGPT4.0 翻译\n\n\n\n\n\n    \n\n","slug":"ChatGPT使用体验：吹响第四次工业革命的号角","date":"2023-03-20T14:27:26.000Z","categories_index":"人工智能","tags_index":"ChatGPT","author_index":"洛安奕然"},{"id":"367916fae7c6bb8b5ac2b801a015da51","title":"ChatGPT & ChatGPT Plus 注册以及订阅教程","content":"ChatGPT 注册注册并使用ChatGPT只需要三大法宝：科学上网、虚拟手机号、Gmail邮箱。\n\n\n\n\n\n\n特别注意\n目前OpenAI并没有在中国大陆以及香港提供服务，大陆和香港的公民受到法律以及政策保护，具有数据隐私权，所以选节点的时候自己注意（优先选择美国）\n科学上网和Gmail邮箱不再赘述，巧妇难为无米之炊，不然只能选择国内的“盗版”ChatGPT\n\n\n虚拟手机号来自毛子的网站，支持多种支付方式（Visa、百事通、支付宝、银联均可），点击右上角充值1美元，回到首页，左边有一个OpenAI的Logo，点开后有各个地区的国旗，我选的美国，只接收短信的虚拟手机号需要50卢布，点击购买。\n\n    \n\n\n\n\n\n然后搜索OpenAI，进入官网，往下翻可以看到Try ChatGPT，点进去，有Gamil邮箱可以直接登录，登录完成后，会提示你需要验证，把虚拟手机号填进去，回到购买手机号的网站，如图所示，多刷新几次，一会儿就可以收到验证码，然后回到OpenAI官网输入验证码，ok，大功告成。\n\n\n\n\n\n\n\n注意\n如果遇到虚拟手机号收不到验证码的情况，建议重新购买，该网站会自动退款\n建议优先购买美国地区的虚拟手机号，被ban以及被拒绝验证的几率会小很多\n\n\nChatGPT Plus 订阅\n\n\n\n\n\n注意\nChatGPT Plus订阅相比上面更加复杂，本文基于DePay（美国虚拟信用卡）以及加密货币USDT支付，具有时效性。如果出现信用卡被拒的情况，本文不承担任何责任（新的技术总要勇于尝试和牺牲，白嫖选择ChatGPT3.5即可）\n\n\n注意事项\n\n\n\n\n\n\n\n\n为什么我的账号被封禁了？无法使用ChatGPT？\n由于特殊的数据隐私政策以及国家法律法规，OpenAI严格遵守各国法律，如果出现账号IP频繁变动，会大概率导致账号被封禁。切记自己选的哪个国家，就一直使用该国家的节点登录，不要频繁更换节点，大大增加封禁概率。\n另外不建议对接OpenAI的开放API，现阶段优先保障自己的使用，如果他人使用导致封禁得不偿失。\n\n\n\n\n\n\n\n\n\n为什么我的ChatGPT反应速度很慢，文字生成速度也很慢？\nChatGPT虽然是一个离线AI，但它仍然基于云服务器、浏览器与用户进行数据传输，科学上网的速度会影响到ChatGPT的反应速度，建议更换软件或者选择该国家的其他节点。\n\n\n\n\n\n\n\n\n\n为什么使用DePay订阅ChatGPT Plus（虚拟信用卡）也会出现被拒绝支付的情况？\n首先，由于文章的时效性，无法保证OpenAI不会封禁DePay的支付方式，如果DePay被证实无法支付，博主会尽快下架失效文章，避免造成金钱损失。\n其次，ChatGPT Plus的风控系统极为严格，科学上网必须保证电脑IP已定位到对应国家，可以通过查询自己IP的方式确认。\n最后，请不要短时间内超过3-5次被拒绝支付，频繁的拒绝同样会触发风控系统，导致账号永久无法订阅，只能更换账号尝试。\n","slug":"ChatGPT & ChatGPT Plus 注册以及订阅教程","date":"2023-03-19T04:08:36.000Z","categories_index":"人工智能","tags_index":"ChatGPT","author_index":"洛安奕然"},{"id":"a4090e51fa77220f889471797379db98","title":"我的开源项目 VUE-ADMIN-ELEMENT-PRO","content":"\n  \n\n\n\n    \n        \n            \n        \n        \n            \n        \n        \n            \n        \n        \n            \n        \n        \n            \n        \n    \n\nVUE-ADMIN-ELEMENT-PRO 基于Vue和Element-UI实现，在Ruoyi-Vue的基础上对界面进行全方位的优化调整，符合当前主流后台管理界面的排版样式。同时将Echarts版本从v4.9.0升级至v5.1.1，基础样式更加美观，功能更加全面。\n\nGitee &amp; 在线预览新增功能\nEchart v4.9.0升级至v5.1.1，Echart 引入方式改为5.0版本。\n新增Echart 配色：暗黑、明亮（跟随系统侧边栏主题）。\n新增骨架屏、空状态、小圆点、结果等ui组件。\n修改401、404页面，适配移动端。\n修改字典获取方式，封装el-select、el-radio组件，免去前端调用字典需要写一个请求方法的窘境。\n代码优化，界面排版样式调整。\n\n内置功能\n\n\n\n\n\n\n\n\nVUE-ADMIN-ELEMENT-PRO并未对Ruoyi-Vue基础功能进行修改。\n\n用户管理：用户是系统操作者，该功能主要完成系统用户配置。\n部门管理：配置系统组织机构（公司、部门、小组），树结构展现支持数据权限。\n岗位管理：配置系统用户所属担任职务。\n菜单管理：配置系统菜单，操作权限，按钮权限标识等。\n角色管理：角色菜单权限分配、设置角色按机构进行数据范围权限划分。\n字典管理：对系统中经常使用的一些较为固定的数据进行维护。\n参数管理：对系统动态配置常用参数。\n通知公告：系统通知公告信息发布维护。\n操作日志：系统正常操作日志记录和查询；系统异常信息日志记录和查询。\n登录日志：系统登录日志记录查询包含登录异常。\n在线用户：当前系统中活跃用户状态监控。\n定时任务：在线（添加、修改、删除)任务调度包含执行结果日志。\n代码生成：前后端代码的生成（java、html、xml、sql）支持CRUD下载 。\n系统接口：根据业务代码自动生成相关的api接口文档。\n服务监控：监视当前系统CPU、内存、磁盘、堆栈等相关信息。\n缓存监控：对系统的缓存信息查询，命令统计等。\n在线构建器：拖动表单元素生成相应的HTML代码。\n连接池监视：监视当前系统数据库连接池状态，可进行分析SQL找出系统性能瓶颈。\n\n注意事项\n\n\n\n\n\n\n特别注意\n本项目开发时间较早，node版本已经过多次更新迭代，如果使用阿里云镜像（即cnpm），node版本不能低于15，但是博主不建议使用cnpm安装node_modules，大概率出现core-js依赖文件丢失的问题，请使用npm install，或者yarn install安装依赖。\n\n\n鸣谢\n\n\n\n\n\n\n\n\nFree &amp; Open Source\n\n  \n     \n  \n  \n     \n  \n     \n    \n  \n\n\n\n\n贡献者（排名不分先后）\n\n\n\n\n\n\n\n\n感谢以下成员对VUE-ADMIN-ELEMENT-PRO做出的贡献！\n\n  \n    \n  \n  \n    \n  \n\n\n\n效果图\n    \n        \n        \n    \n    \n        \n        \n    \n    \n        \n        \n    \n    \n        \n        \n    \n","slug":"个人开源项目 vue-admin-element-pro","date":"2021-05-16T06:56:16.000Z","categories_index":"开源","tags_index":"vue-admin-element-pro","author_index":"洛安奕然"},{"id":"cfd87c3e1a89be0a65443962ea1afa88","title":"Ant-Desgin-Vue Table合并单元格","content":"最近碰到一个需求，客户要求发货汇总明细表中需要展示某些客户近期的发货明细。这样就涉及到合并单元格的问题。代码是CSDN一个大神写的，我只是负责搬运，顺便详细记录一下用到了哪些API。\n代码展示&#x2F;* renderContent 返回要合并的数据 *&#x2F;\nconst renderContent &#x3D; (value) &#x3D;&gt; &#123;\n  const obj &#x3D; &#123;\n    children: value,\n    attrs: &#123;&#125;,\n  &#125;\n  return obj\n&#125;\n\n&#x2F;**\n  * @param dataIndex  列数据在数据项中对应的 key\n  * @param title \t  列头显示文字\n  * @param columns    列描述数据对象\n  * @returns &#123;\n  \t\t\t\tchildren  指定树形结构的列名\n  \t\t\t\trowSpan   表格支持行&#x2F;列合并 (例如: rowSpan: 3 代表该列中的三行)\n  \t\t\t  &#125; \n  *&#x2F;\ndata() &#123;\n    return &#123;\n        columns: []\n    &#125;\n&#125;,\ncreated() &#123;\n\t\tthis.columns &#x3D; [\n                &#123;\n                  title: &#39;客户名称&#39;,\n                  dataIndex: &#39;customerName&#39;,\n                  align: &#39;center&#39;,\n                    &#x2F;&#x2F; _ 占位符 详细参数可以查询Antd官网\n                  customRender(_, row) &#123;\n                    return &#123;\n                      children: row.customerName,\n                      attrs: &#123;\n                        &#x2F;&#x2F; customerNameRowSpan 键名 &#96;$&#123;key&#125;RowSpan&#96;\n                        rowSpan: row.customerNameRowSpan,\n                      &#125;,\n                    &#125;\n                  &#125;,\n                &#125;,\n                &#123;\n                  title: &#39;物料分类&#39;,\n                  align: &#39;center&#39;,\n                  dataIndex: &#39;categoryName&#39;,\n                  customRender: renderContent,\n                &#125;,\n              ]\n    this.rowSpan(&#39;customerName&#39;) \n&#125;\n\n&#x2F;**\n  * 这里将rowSpan写成了一个方法，通过遍历计算出key在dataSource中存在多少个，把键名&#96;$&#123;key&#125;RowSpan&#96;插入对象并返回。\n  * @params dataSource 表格数据\n  * @params key 传入dataIndex(需要合并哪一列，就传入该列的dataIndex)\n  *&#x2F;\nmethods: &#123;\n    rowSpan(key) &#123;\n      let arr &#x3D; this.dataSource.reduce((result, item) &#x3D;&gt; &#123;\n          if (result.indexOf(item[key]) &lt; 0) &#123;\n            result.push(item[key])\n          &#125;\n          return result\n        &#125;, []).reduce((result, keys) &#x3D;&gt; &#123;\n          const children &#x3D; this.dataSource.filter((item) &#x3D;&gt; item[key] &#x3D;&#x3D;&#x3D; keys)\n          result &#x3D; result.concat(\n            children.map((item, index) &#x3D;&gt; (&#123;\n              ...item,\n              [&#96;$&#123;key&#125;RowSpan&#96;]: index &#x3D;&#x3D;&#x3D; 0 ? children.length : 0,\n            &#125;))\n          )\n          return result\n        &#125;, [])\n      this.dataSource &#x3D; arr\n    &#125;\n&#125;\n\n效果\n","slug":"Ant-Desgin-Vue Table合并单元格","date":"2021-05-16T06:56:16.000Z","categories_index":"javaScript","tags_index":"Ant Desgin Vue","author_index":"洛安奕然"},{"id":"da152832baa1aff4feefe88d8b9a71d6","title":"手把手教你搭建个人博客 — GitHub篇","content":"\n\n\n\n\n\n\n\n\n博客，最早诞生于1997年Userland公司CEO Dave Winer运行的Scripting News，至今已经存在超过20年。\n搭建博客的框架有很多，例如：HEXO、WordPress、Hugo、VuePress等，都属于开源框架，成本低廉，利用GitHub仓库甚至连域名都不需要购买，即可让他人访问。\n本期主要讲述GitHub + Hexo搭建个人博客，分为上、中、下三个部分，之后我会把博客部署到国内云服务器上，届时再写一篇有关服务器部署的博客。\n\n注册账号进入Github官网，点击右上角的Sign up\n\n\n\n\n\n\n提示\nGitHub首页在两年间多次改版迭代，但是整体布局始终没改，图片截取时间较早，仅供参考\n\n\n\n跳转到注册页面，按照下图所示，填写 Username、Email address、Password，点击 Create account 即可。\n\n接下来会跳转到调查问卷页面，节约时间直接跳过，然后Github会提示你去邮箱验证刚刚注册的账号。\n\n登录邮箱，找到邮件 [GitHub] Please verify your email address，点击绿色按钮，验证电子邮箱，自动跳转到Github，账号就注册完成了。\n\n创建仓库点击右上角头像，选择下拉弹框中的 Your Repositories 你的仓库，点击绿色按钮 New 新建。\n\n按照下图所示，输入仓库名，其他的我就不细说了，看图即可。\n\n\n\n\n\n\n\n特别注意\n注意：仓库名必须是用户名 格式如下：\n所有者&#x2F;用户名.github.io  例如：xiaoming&#x2F;xiaoming.githubo.io\n\n用户名不能带有大写字母！！！ 否则后续访问github.io会出现404问题\n例如： Advictoriamn1&#x2F;Advictoriamn1.github.io | XIAOMING&#x2F;XIAOMING.github.io\n\n\n\n\n填好后，点击 Create repository 按钮创建仓库，一个名为Advictoriamn1.github.io的仓库就建好了。\n下载 Git\n\n\n\n\n\n\n\n\n本文不推荐任何可视化工具，可视化虽然很便捷，但是也失去了深入学习的机会，而且Git直接输入命令比可视化快得多\n\n首先进入GIT工具下载页面，点击Windows（根据自己的电脑系统决定），浏览器会自动下载Git。\n点击安装包，默认不需要改动，直接下一步到完成即可。\n回到桌面，右击鼠标，出现Git Bash Here就代表Git工具已经安装成功。\n\n上传README.md测试本地计算机与Github服务器是否连接成功，只有连接成功才能上传Hexo静态文件。\nGit工具使用指南（阮一峰大佬的博客）：http://www.ruanyifeng.com/blog/2014/06/git_remote.html\n\n常见问题🐞\n\n\n\n\n\n常见问题\n为什么打不开Github？为什么使用Git上传文件会超时报错？\nGithub服务器位于美国，可能出现连接超时的问题，请百度host自行修改，本文不再赘述。（有能力的可以选择梯子，更加便捷）\n为什么收不到Github发送的验证电子邮件？\n请尝试使用QQ邮箱注册，163邮箱将github.com加入白名单（2021年已不存在此问题）\n\n\n","slug":"手把手教你搭建个人博客-Github","date":"2021-05-13T13:43:26.000Z","categories_index":"Hexo","tags_index":"GitHub","author_index":"洛安奕然"}]