{"title":"Ant-Desgin-Vue Table合并单元格","uid":"cfd87c3e1a89be0a65443962ea1afa88","slug":"Ant-Desgin-Vue Table合并单元格","date":"2021-05-16T06:56:16.000Z","updated":"2023-03-20T15:15:41.998Z","comments":true,"path":"api/articles/Ant-Desgin-Vue Table合并单元格.json","keywords":null,"cover":"https://s1.ax1x.com/2023/03/19/ppYIsSO.png","content":"<p>最近碰到一个需求，客户要求发货汇总明细表中需要展示某些客户近期的发货明细。这样就涉及到合并单元格的问题。代码是CSDN一个大神写的，我只是负责搬运，顺便详细记录一下用到了哪些API。</p>\n<h2 id=\"代码展示\"><a href=\"#代码展示\" class=\"headerlink\" title=\"代码展示\"></a>代码展示</h2><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">&#x2F;* renderContent 返回要合并的数据 *&#x2F;\nconst renderContent &#x3D; (value) &#x3D;&gt; &#123;\n  const obj &#x3D; &#123;\n    children: value,\n    attrs: &#123;&#125;,\n  &#125;\n  return obj\n&#125;\n\n&#x2F;**\n  * @param dataIndex  列数据在数据项中对应的 key\n  * @param title \t  列头显示文字\n  * @param columns    列描述数据对象\n  * @returns &#123;\n  \t\t\t\tchildren  指定树形结构的列名\n  \t\t\t\trowSpan   表格支持行&#x2F;列合并 (例如: rowSpan: 3 代表该列中的三行)\n  \t\t\t  &#125; \n  *&#x2F;\ndata() &#123;\n    return &#123;\n        columns: []\n    &#125;\n&#125;,\ncreated() &#123;\n\t\tthis.columns &#x3D; [\n                &#123;\n                  title: &#39;客户名称&#39;,\n                  dataIndex: &#39;customerName&#39;,\n                  align: &#39;center&#39;,\n                    &#x2F;&#x2F; _ 占位符 详细参数可以查询Antd官网\n                  customRender(_, row) &#123;\n                    return &#123;\n                      children: row.customerName,\n                      attrs: &#123;\n                        &#x2F;&#x2F; customerNameRowSpan 键名 &#96;$&#123;key&#125;RowSpan&#96;\n                        rowSpan: row.customerNameRowSpan,\n                      &#125;,\n                    &#125;\n                  &#125;,\n                &#125;,\n                &#123;\n                  title: &#39;物料分类&#39;,\n                  align: &#39;center&#39;,\n                  dataIndex: &#39;categoryName&#39;,\n                  customRender: renderContent,\n                &#125;,\n              ]\n    this.rowSpan(&#39;customerName&#39;) \n&#125;</code></pre>\n\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">&#x2F;**\n  * 这里将rowSpan写成了一个方法，通过遍历计算出key在dataSource中存在多少个，把键名&#96;$&#123;key&#125;RowSpan&#96;插入对象并返回。\n  * @params dataSource 表格数据\n  * @params key 传入dataIndex(需要合并哪一列，就传入该列的dataIndex)\n  *&#x2F;\nmethods: &#123;\n    rowSpan(key) &#123;\n      let arr &#x3D; this.dataSource.reduce((result, item) &#x3D;&gt; &#123;\n          if (result.indexOf(item[key]) &lt; 0) &#123;\n            result.push(item[key])\n          &#125;\n          return result\n        &#125;, []).reduce((result, keys) &#x3D;&gt; &#123;\n          const children &#x3D; this.dataSource.filter((item) &#x3D;&gt; item[key] &#x3D;&#x3D;&#x3D; keys)\n          result &#x3D; result.concat(\n            children.map((item, index) &#x3D;&gt; (&#123;\n              ...item,\n              [&#96;$&#123;key&#125;RowSpan&#96;]: index &#x3D;&#x3D;&#x3D; 0 ? children.length : 0,\n            &#125;))\n          )\n          return result\n        &#125;, [])\n      this.dataSource &#x3D; arr\n    &#125;\n&#125;</code></pre>\n\n<h2 id=\"效果\"><a href=\"#效果\" class=\"headerlink\" title=\"效果\"></a>效果</h2><p><img src=\"https://z3.ax1x.com/2021/04/23/cXRZ36.png\"></p>\n","text":"最近碰到一个需求，客户要求发货汇总明细表中需要展示某些客户近期的发货明细。这样就涉及到合并单元格的问题。代码是CSDN一个大神写的，我只是负责搬运，顺便详细记录...","link":"","photos":[],"count_time":{"symbolsCount":"2.5k","symbolsTime":"2 mins."},"categories":[{"name":"javaScript","slug":"javaScript","count":1,"path":"api/categories/javaScript.json"}],"tags":[{"name":"Ant Desgin Vue","slug":"Ant-Desgin-Vue","count":1,"path":"api/tags/Ant-Desgin-Vue.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BB%A3%E7%A0%81%E5%B1%95%E7%A4%BA\"><span class=\"toc-text\">代码展示</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%95%88%E6%9E%9C\"><span class=\"toc-text\">效果</span></a></li></ol>","author":{"name":"洛安奕然","slug":"blog-author","avatar":"https://s1.ax1x.com/2023/03/19/ppYN7sH.jpg","link":"/","description":"STAY HUNGRY STAY FOOLISH <br /> <p>求知若饥，虚心若愚</p>","socials":{"github":"https://github.com/TriDiamond","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/7318914058","zhihu":"https://www.zhihu.com/people/tridiamond","csdn":"","juejin":"https://juejin.cn/user/1873223546578589","customs":{}}},"mapped":true,"prev_post":{"title":"我的开源项目 VUE-ADMIN-ELEMENT-PRO","uid":"a4090e51fa77220f889471797379db98","slug":"个人开源项目 vue-admin-element-pro","date":"2021-05-16T06:56:16.000Z","updated":"2023-03-21T02:07:16.253Z","comments":true,"path":"api/articles/个人开源项目 vue-admin-element-pro.json","keywords":null,"cover":"https://s1.ax1x.com/2023/03/20/ppN6hMn.png","text":" VUE-ADMIN-ELEMENT-PRO 基于Vue和Element-UI实现，在Ruoyi-Vue的基础上对界面进行全方位的优化调整，符合当前主流后台管理界面的排版样式。同时将Echarts版本从v4.9.0升级至v5.1.1，基础样式更加美观，功能更加全面。 Gitee ...","link":"","photos":[],"count_time":{"symbolsCount":"1.5k","symbolsTime":"1 mins."},"categories":[{"name":"开源","slug":"开源","count":1,"path":"api/categories/开源.json"}],"tags":[{"name":"vue-admin-element-pro","slug":"vue-admin-element-pro","count":1,"path":"api/tags/vue-admin-element-pro.json"}],"author":{"name":"洛安奕然","slug":"blog-author","avatar":"https://s1.ax1x.com/2023/03/19/ppYN7sH.jpg","link":"/","description":"STAY HUNGRY STAY FOOLISH <br /> <p>求知若饥，虚心若愚</p>","socials":{"github":"https://github.com/TriDiamond","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/7318914058","zhihu":"https://www.zhihu.com/people/tridiamond","csdn":"","juejin":"https://juejin.cn/user/1873223546578589","customs":{}}},"feature":true},"next_post":{}}